import { Auth } from "aws-amplify";
import { useEffect, useState } from "react";
import { config } from "../../config/config";

const apiURL = config.apiURL;

const ENDPOINT_GRP = `${apiURL}groups`;
const ENDPOINT_BANNER = `${apiURL}info`;

const filterOutAutoGeneratedGroups = (group) =>
  !group.Description.includes("Autogenerated group");

export function useCognitoGroups() {
  const [groups, setGroups] = useState([]);
  const [banner, setBanner] = useState([]);
  const [loading, setLoading] = useState(false);
  const [error, setError] = useState(false);
  useEffect(() => {
    async function fetchCognitoGroups() {
      setLoading(true);
      try {
        const user = await Auth.currentAuthenticatedUser();

        if (!user) setGroups([]);

        const idToken = user.signInUserSession.idToken.jwtToken;
        const headers = {
          "Content-Type": "application/json",
          Authorization: `${idToken}`,
        };

        const res = await fetch(ENDPOINT_GRP, { method: "GET", headers });
        const data = await res.json();

        setGroups(data.filter(filterOutAutoGeneratedGroups));

        const res1 = await fetch(ENDPOINT_BANNER, { method: "GET", headers });
        const data1 = await res1.json();
        
        setBanner(data1);
      } catch (error) {
        console.log("error here");
        setError(error);
      }

      setLoading(false);
    }

    fetchCognitoGroups();
  }, []);

  return [groups, banner, loading, error];
}
